
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import static javax.swing.JOptionPane.showMessageDialog;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.category.DefaultCategoryDataset;






public class Interfaz extends javax.swing.JFrame {

    DefaultListModel<Float> model = new DefaultListModel<>();
    DefaultListModel<Float> model2 = new DefaultListModel<>();
    ArrayList<Float> resultadosArray = new ArrayList<Float>();
    MetodoMixto Mixto;
    MetodoMultiplicativo multiplicativo;
    int counter [];
    
    
    public Interfaz() {
        initComponents();
        
        
        
        txt_valorX.setEditable(false);
        txt_valorX.setBackground(Color.GRAY);
        txt_valorK.setEditable(false);
        txt_valorK.setBackground(Color.GRAY);
        txt_valorG.setEditable(false);
        txt_valorG.setBackground(Color.GRAY);
        txt_valorC.setEditable(false);
        txt_valorC.setBackground(Color.GRAY);
        list_resultados.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        buttonGroup6 = new javax.swing.ButtonGroup();
        buttonGroup7 = new javax.swing.ButtonGroup();
        buttonGroup8 = new javax.swing.ButtonGroup();
        buttonGroup9 = new javax.swing.ButtonGroup();
        buttonGroup10 = new javax.swing.ButtonGroup();
        cmb_metodos = new javax.swing.JComboBox<>();
        txt_valorX = new javax.swing.JTextField();
        txt_valorK = new javax.swing.JTextField();
        txt_valorG = new javax.swing.JTextField();
        txt_valorC = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btn_generar20 = new javax.swing.JButton();
        btn_generar1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        list_resultados = new javax.swing.JList<>();
        lbl_ecuacion = new javax.swing.JLabel();
        cmb_generador_aleatorio_java = new javax.swing.JComboBox<>();
        btn_graficar = new javax.swing.JButton();
        txt_nroIntervalos = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txt_nroMuestras = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        list_nrosGrafico = new javax.swing.JList<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cmb_metodos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Metodo mixto", "Metodo multiplicativo" }));
        cmb_metodos.setSelectedIndex(-1);
        cmb_metodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_metodosActionPerformed(evt);
            }
        });

        jLabel1.setText("Valor X");

        jLabel2.setText("Valor K");

        jLabel3.setText("Valor G");

        jLabel4.setText("Valor C");

        btn_generar20.setText("Generar 20");
        btn_generar20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_generar20ActionPerformed(evt);
            }
        });

        btn_generar1.setText("Generar +1");
        btn_generar1.setEnabled(false);
        btn_generar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_generar1ActionPerformed(evt);
            }
        });

        list_resultados.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        jScrollPane1.setViewportView(list_resultados);

        cmb_generador_aleatorio_java.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Generador aleatorio java", "generador congruencial mixto" }));
        cmb_generador_aleatorio_java.setSelectedIndex(-1);
        cmb_generador_aleatorio_java.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_generador_aleatorio_javaActionPerformed(evt);
            }
        });

        btn_graficar.setText("Graficar");
        btn_graficar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_graficarMouseClicked(evt);
            }
        });
        btn_graficar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_graficarActionPerformed(evt);
            }
        });

        jLabel5.setText("Nº Intervalos");

        jLabel6.setText("Nº Muestras");

        list_nrosGrafico.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        jScrollPane2.setViewportView(list_nrosGrafico);

        jLabel7.setText("Seleccionar metodo congruencial");

        jLabel8.setText("Seleccionar generador");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                        .addGap(512, 512, 512))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btn_graficar)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel6))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txt_nroMuestras, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txt_nroIntervalos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                    .addComponent(jLabel3))
                                                .addGap(15, 15, 15))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(txt_valorG, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                                            .addComponent(txt_valorK, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txt_valorX)
                                            .addComponent(txt_valorC)))
                                    .addComponent(cmb_metodos, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbl_ecuacion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cmb_generador_aleatorio_java, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btn_generar20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btn_generar1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(34, 34, 34))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(lbl_ecuacion, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cmb_metodos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_valorX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_valorK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_generar20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_generar1)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_valorG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_valorC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(116, 116, 116)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(cmb_generador_aleatorio_java, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_nroIntervalos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_nroMuestras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(183, 183, 183)
                        .addComponent(btn_graficar))
                    .addComponent(jScrollPane2))
                .addGap(43, 43, 43))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmb_metodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_metodosActionPerformed
           if (cmb_metodos.getSelectedIndex()==0){
                clear();
                txt_valorC.setEnabled(true);
                lbl_ecuacion.setText("𝑋i+1= (a.Xi+c)mod(m)");
                txt_valorX.setEditable(true);
                txt_valorX.setBackground(Color.WHITE);
                txt_valorK.setEditable(true);
                txt_valorK.setBackground(Color.WHITE);
                txt_valorG.setEditable(true);
                txt_valorG.setBackground(Color.WHITE);
                txt_valorC.setEditable(true);
                txt_valorC.setBackground(Color.WHITE);
        
       }    
           else if (cmb_metodos.getSelectedIndex()==1){
                clear();
                
                lbl_ecuacion.setText("𝑋i+1= (a.Xi)mod(m)");
                txt_valorX.setEditable(true);
                txt_valorX.setBackground(Color.WHITE);
                txt_valorK.setEditable(true);
                txt_valorK.setBackground(Color.WHITE);
                txt_valorG.setEditable(true);
                txt_valorG.setBackground(Color.WHITE);
                txt_valorC.setEnabled(false);
        
       }

    }//GEN-LAST:event_cmb_metodosActionPerformed

    private void clear(){
        txt_valorX.setText("");        
        txt_valorK.setText("");        
        txt_valorG.setText("");
        txt_valorC.setText("");
        model.clear();
        btn_generar20.setEnabled(true);
        btn_generar1.setEnabled(false);
    }
    
    private void btn_generar20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_generar20ActionPerformed
//         TODO add your handling code here:
        if (cmb_metodos.getSelectedIndex()==0){
            
            
            int Xn = Integer.parseInt(txt_valorX.getText());
            int k = Integer.parseInt(txt_valorK.getText());
            int g = Integer.parseInt(txt_valorG.getText());
            int c = Integer.parseInt(txt_valorC.getText());  
            Mixto = new MetodoMixto(Xn,k,g,c);
            for(int i = 0; i<20; i++){
                model.addElement(Mixto.calcular1NumeroAleatorio()); 
            }       
            btn_generar1.setEnabled(true);
            btn_generar20.setEnabled(false);
        }
        
        else if (cmb_metodos.getSelectedIndex()==1){
            
            
            int Xn = Integer.parseInt(txt_valorX.getText());
            int k = Integer.parseInt(txt_valorK.getText());
            int g = Integer.parseInt(txt_valorG.getText());
            txt_valorC.setEnabled(false);
            multiplicativo = new MetodoMultiplicativo(Xn,k,g);
            for(int i = 0; i<20; i++){
                model.addElement(multiplicativo.calcular1NumeroAleatorio()); 
            }       
            btn_generar1.setEnabled(true);
            btn_generar20.setEnabled(false);
        }
            
    }//GEN-LAST:event_btn_generar20ActionPerformed

    private void btn_generar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_generar1ActionPerformed
        // TODO add your handling code here:
        if (cmb_metodos.getSelectedIndex()==0){
            model.addElement(Mixto.calcular1NumeroAleatorio());
        }
        else if (cmb_metodos.getSelectedIndex()==1){
            model.addElement(multiplicativo.calcular1NumeroAleatorio());
        }
    }//GEN-LAST:event_btn_generar1ActionPerformed

    private void cmb_generador_aleatorio_javaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_generador_aleatorio_javaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_generador_aleatorio_javaActionPerformed

    private void btn_graficarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_graficarActionPerformed
        
    }//GEN-LAST:event_btn_graficarActionPerformed

    private void btn_graficarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_graficarMouseClicked
        // TODO add your handling code here:
        if (cmb_generador_aleatorio_java.getSelectedIndex()==0){
            ArrayList<Float> aleatorios_java = new ArrayList<Float>();
            AleatoriosJava aleatoriosjava = new AleatoriosJava();
            aleatorios_java= aleatoriosjava.generarAleatorios(Integer.parseInt(txt_nroMuestras.getText()));
            ChiCuadrado chicuadrado= new ChiCuadrado(Integer.parseInt(txt_nroIntervalos.getText()), Integer.parseInt(txt_nroMuestras.getText()));
            counter = chicuadrado.contar(aleatorios_java);
            list_nrosGrafico.setModel(model2);
            for(int i = 0; i<aleatorios_java.size(); i++){
                model2.addElement(aleatorios_java.get(i)); 
            }   
            dibujar();
        }
        else if (cmb_generador_aleatorio_java.getSelectedIndex()==1){
//            if (txt_valorX.getText()==""||txt_valorK.getText()==""||txt_valorG.getText()==""||txt_valorC.getText()==""){
//                showMessageDialog(null, "Seleccionar metodo congruencial mixto y completar valores");
//            }
            
                
            ArrayList<Float> aleatorios_mixto = new ArrayList<Float>();
            int Xn = Integer.parseInt(txt_valorX.getText());
            int k = Integer.parseInt(txt_valorK.getText());
            int g = Integer.parseInt(txt_valorG.getText());
            int c = Integer.parseInt(txt_valorC.getText());  
            MetodoMixto aleatorioMixto= new MetodoMixto(Xn,k,g,c);
            aleatorios_mixto= aleatorioMixto.calcularNumerosAleatorio(Integer.parseInt(txt_nroMuestras.getText()));
            ChiCuadrado chicuadrado= new ChiCuadrado(Integer.parseInt(txt_nroIntervalos.getText()), Integer.parseInt(txt_nroMuestras.getText()));
            counter= chicuadrado.contar(aleatorios_mixto);
            list_nrosGrafico.setModel(model2);
            for(int i = 0; i<aleatorios_mixto.size(); i++){
                model2.addElement(aleatorios_mixto.get(i)); 
            }
            
            dibujar();
        }
    }//GEN-LAST:event_btn_graficarMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }
    
    public void dibujar(){
        DefaultCategoryDataset data= new DefaultCategoryDataset();
        float intervaloMin=0;
        float ran = 1.0f / (Float.parseFloat(txt_nroIntervalos.getText()));
        float intervaloMax= ran;
        for (int i=0; i<counter.length;i++){
            data.addValue(counter[i], ((Math.floor(intervaloMin * 100) / 100) + "-" + (Math.floor(intervaloMax * 100) / 100)), "Int" + (i+1));
            intervaloMin = intervaloMax;
            intervaloMax = intervaloMax + ran;

            
        }
        
        
        JFreeChart grafica= ChartFactory.createBarChart3D("", "Intervalos", "Contador", data);
        ChartPanel contenedor = new ChartPanel(grafica);
        
        JFrame ventana= new JFrame("Grafica");
        ventana.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        ventana.add(contenedor);
        ventana.setSize(500, 400);
        ventana.setVisible(true);
        ventana.setLocationRelativeTo(null);
        
    
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_generar1;
    private javax.swing.JButton btn_generar20;
    private javax.swing.JButton btn_graficar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup10;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.ButtonGroup buttonGroup6;
    private javax.swing.ButtonGroup buttonGroup7;
    private javax.swing.ButtonGroup buttonGroup8;
    private javax.swing.ButtonGroup buttonGroup9;
    private javax.swing.JComboBox<String> cmb_generador_aleatorio_java;
    private javax.swing.JComboBox<String> cmb_metodos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbl_ecuacion;
    private javax.swing.JList<Float> list_nrosGrafico;
    private javax.swing.JList<Float> list_resultados;
    private javax.swing.JTextField txt_nroIntervalos;
    private javax.swing.JTextField txt_nroMuestras;
    private javax.swing.JTextField txt_valorC;
    private javax.swing.JTextField txt_valorG;
    private javax.swing.JTextField txt_valorK;
    private javax.swing.JTextField txt_valorX;
    // End of variables declaration//GEN-END:variables
}
